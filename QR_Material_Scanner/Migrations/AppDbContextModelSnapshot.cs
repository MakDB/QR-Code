// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QR_Material_Scanner.Models;

namespace QR_Material_Scanner.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("QR_Material_Scanner.Models.Delivery_Receipt", b =>
                {
                    b.Property<string>("vbeln")
                        .HasColumnName("Delivery_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("posnr")
                        .HasColumnName("Line_Item_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("bldat")
                        .HasColumnName("Document_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("kdauf")
                        .HasColumnName("Sales_Order_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kunnr")
                        .HasColumnName("Customer_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("lfimg")
                        .HasColumnName("Quantity_To_Be_Picked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("lgort")
                        .HasColumnName("Storage_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matnr")
                        .HasColumnName("Material_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vstel")
                        .HasColumnName("Shipping_Point")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("werks")
                        .HasColumnName("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vbeln", "posnr");

                    b.ToTable("tran_Delivery_Information");
                });

            modelBuilder.Entity("QR_Material_Scanner.Models.Goods_Receipt", b =>
                {
                    b.Property<string>("belnr")
                        .HasColumnName("GR_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ebelp")
                        .HasColumnName("Line_Item_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("bedat")
                        .HasColumnName("Document_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("budat")
                        .HasColumnName("GR_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ebeln")
                        .HasColumnName("PO_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lgort")
                        .HasColumnName("Storage_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lifnr")
                        .HasColumnName("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matnr")
                        .HasColumnName("Material_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("menge")
                        .HasColumnName("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("werks")
                        .HasColumnName("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("belnr", "ebelp");

                    b.ToTable("tran_GR_Information");
                });

            modelBuilder.Entity("QR_Material_Scanner.Models.Material_Master", b =>
                {
                    b.Property<string>("GERNR")
                        .HasColumnName("Serial_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MATNR")
                        .HasColumnName("Material_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LIFNR")
                        .HasColumnName("Vendor_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AEDAT")
                        .HasColumnName("Modification_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("AENAM")
                        .HasColumnName("Modified_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BUDAT")
                        .HasColumnName("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CANCEL")
                        .HasColumnName("Cancelled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ERDAT")
                        .HasColumnName("Capturing_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ERNAM")
                        .HasColumnName("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GJHAR")
                        .HasColumnName("Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MATKX")
                        .HasColumnName("Product_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NETPR")
                        .HasColumnName("MRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RFCMACH")
                        .HasColumnName("Machine_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZMONTH")
                        .HasColumnName("Month")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GERNR", "MATNR", "LIFNR");

                    b.ToTable("mst_Material_Information");
                });

            modelBuilder.Entity("QR_Material_Scanner.Models.Material_Transaction", b =>
                {
                    b.Property<string>("GERNR")
                        .HasColumnName("Serial_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ESART")
                        .HasColumnName("Transaction_Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EBELN")
                        .HasColumnName("Document_No")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DZETILE")
                        .HasColumnName("Line_Item_Number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AEDAT")
                        .HasColumnName("Modification_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("AENAM")
                        .HasColumnName("Modified_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CANCEL")
                        .HasColumnName("Cancellation_Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ERDAT")
                        .HasColumnName("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ERNAM")
                        .HasColumnName("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGORT")
                        .HasColumnName("Storage_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QA_STATUS")
                        .HasColumnName("QA_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STATUS")
                        .HasColumnName("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scrap")
                        .HasColumnName("Scrap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WERKS")
                        .HasColumnName("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XBLNR")
                        .HasColumnName("Ref_Doc_No")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GERNR", "ESART", "EBELN", "DZETILE");

                    b.ToTable("tran_Material_Transaction");
                });

            modelBuilder.Entity("QR_Material_Scanner.Models.Result_Material", b =>
                {
                    b.Property<string>("Serial_Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status_Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Serial_Number");

                    b.ToTable("result_Material");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
