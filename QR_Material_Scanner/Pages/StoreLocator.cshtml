@page "{id:int}"
@model QR_Material_Scanner.Pages.StoreLocatorModel
@{

}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>Ariston Thermo | Store Registration</title>
    <meta name="description" content="Store Registration">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Disable tap highlight on IE -->
    <meta name="msapplication-tap-highlight" content="no">

    <!-- Progressive Web App -->
    <meta name="theme-color" content="#f5f8fa">

    <!-- Add to homescreen for Chrome on Android -->
    <meta name="mobile-web-app-capable" content="yes">

    <link rel="icon" sizes="192x192" href="~/images/icons/icon-192x192.png">
    <link rel="icon" sizes="512x512" href="~/images/icons/icon-512x512.png">

    <!-- Add to homescreen for Safari on iOS -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="ATIPL">
    <link rel="apple-touch-icon-precomposed" href="~/images/icons/icon-192x192.png">
    @*<link rel="mask-icon" href="images/icons/desktop/safari-pinned-tab.svg" color="#5bbad5">*@

    <!-- Tile color for Windows -->
    <meta name="msapplication-TileImage" content="~/images/icons/icon-152x152.png">
    <meta name="msapplication-TileColor" content="#ffc40d">

    <!-- Place favicon.ico in the root directory -->
    <link rel="icon" type="image/png" sizes="32x32" href="~/images/icons/icon-72x72.png">
    <link rel="icon" type="image/png" sizes="16x16" href="images/icons/desktop/favicon-16x16.png">

    <!-- SEO: If your mobile URL is different from the desktop URL, add a canonical link to the desktop page https://developers.google.com/webmasters/smartphone-sites/feature-phones -->
    <!--
    <link rel="canonical" href="http://www.example.com/">
    -->
    <link rel="stylesheet" href="~/css/style.css">
</head>

<body class="bg-white">

    <!-- loader -->
    <div id="loader">
        <div class="spinner-border text-primary" role="status"></div>
    </div>
    <!-- * loader -->
    <!-- App Header -->
    <div class="appHeader no-border transparent position-absolute">
        <div class="left">
            <a href="javascript:;" class="headerButton goBack">
                <ion-icon name="chevron-back-outline"></ion-icon>
            </a>
        </div>
        <div class="pageTitle"></div>
        <div class="right">
        </div>
    </div>
    <!-- * App Header -->
    <!-- App Capsule -->
    <div id="appCapsule">

        <div class="section full mt-2 mb-2">
            <div class="section-title">Store Locator Registration</div>
            <div class="wide-block pt-2 pb-2">

                <form method="post" autocomplete="off">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Input.State, new { @id = "HfState" })
                    @Html.HiddenFor(m => m.Input.City, new { @id = "HfCity" })
                    @Html.HiddenFor(m => m.Input.Longitude, new { @id = "HfLongitude" })
                    @Html.ValidationMessageFor(m => m.Input.Longitude, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.Input.Latitude, new { @id = "HfLatitude" })
                    @Html.ValidationMessageFor(m => m.Input.Latitude, "", new { @class = "text-danger" })

                    <div class="form-group boxed">
                        <div class="input-wrapper">
                                <label class="label" for="Mobile">Middleware ID </label>

                                @Html.TextBoxFor(m => m.Input.Id, new { @class = "form-control", @disabled = "true" })
                                @Html.ValidationMessageFor(m => m.Input.Id, "", new { @class = "text-danger" })

                                <i class="clear-input">
                                    <ion-icon name="close-circle"></ion-icon>
                                </i>

                            </div>
                        @Html.HiddenFor(m => m.Input.Id)
                    </div>
                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="Business_Name">Business Name </label>
                            @Html.TextBoxFor(m => m.Input.Business_Name, new { @class = "form-control", @placeholder = "Enter your Business Name", autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Input.Business_Name, "", new { @class = "text-danger" })

                            <i class="clear-input">
                                <ion-icon name="close-circle"></ion-icon>
                            </i>
                        </div>
                    </div>

                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="Mobile">Mobile </label>

                            @Html.TextBoxFor(m => m.Input.Mobile, new { @class = "form-control", @placeholder = "Enter your Mobile Name" })
                            @Html.ValidationMessageFor(m => m.Input.Mobile, "", new { @class = "text-danger" })

                            <i class="clear-input">
                                <ion-icon name="close-circle"></ion-icon>
                            </i>

                        </div>
                    </div>
                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="Mobile">Email </label>

                            @Html.TextBoxFor(m => m.Input.Email, new { @class = "form-control", @placeholder = "Enter your Email Address" })
                            @Html.ValidationMessageFor(m => m.Input.Email, "", new { @class = "text-danger" })

                            <i class="clear-input">
                                <ion-icon name="close-circle"></ion-icon>
                            </i>

                        </div>
                    </div>
                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="Address">Address </label>


                            @Html.TextAreaFor(m => m.Input.Address, new { @class = "form-control", @placeholder = "Enter your Full Address" })
                            @Html.ValidationMessageFor(m => m.Input.Address, "", new { @class = "text-danger" })
                            <i class="clear-input">
                                <ion-icon name="close-circle"></ion-icon>
                            </i>

                        </div>
                    </div>




                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="txtState">State</label>
                            <select onchange="print_city('txtCity', this.selectedIndex)" id="txtState" name="State"
                                    class="form-control custom-select" required></select>
                           
                            @Html.ValidationMessageFor(m => m.Input.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="txtCity">City</label>
                            <select class="form-control custom-select" id="txtCity" required>
                            </select>
                            @Html.ValidationMessageFor(m => m.Input.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="Pincode">Pincode</label>

                            @Html.TextBoxFor(m => m.Input.Pincode, new { @class = "form-control", @placeholder = "Enter your Area Pincode" })
                            @Html.ValidationMessageFor(m => m.Input.Pincode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group boxed">
                        <div class="input-wrapper">
                            <label class="label" for="Pincode">GST Number</label>

                            @Html.TextBoxFor(m => m.Input.GST, new { @class = "form-control", @placeholder = "Enter your GST Number" })
                            @Html.ValidationMessageFor(m => m.Input.GST, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mt-2">
                        <label class="label" id="lblGeoCordinates"></label>
                        @*<button class="btn btn-success btn-block" onclick="geoFindMe()" type="button">GEO LOCATION</button>*@
                    </div>

                    <div class="mt-2">
                        <button class="btn btn-primary btn-block" type="submit">Submit</button>
                    </div>

                </form>


            </div>
        </div>

    </div>
    <!-- * App Capsule -->
    <!-- Jquery -->
    <script src="~/js/jquery-3.4.1.min.js"></script>
    <!-- Bootstrap-->
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <!-- Ionicons -->
    <script type="module" src="https://unpkg.com/ionicons%405.0.0/dist/ionicons/ionicons.js"></script>
    <!-- Owl Carousel -->
    <script src="~/js/owl.carousel.min.js"></script>
    <!-- jQuery Circle Progress -->
    <script src="~/js/circle-progress.min.js"></script>
    <script src="~/js/base.js"></script>
    <script src="~/js/city.js"></script>
    <script language="javascript">
        print_state("txtState");

    </script>
    <script>
        $("#txtState").change(function () {
            $('#HfState').val($("#txtState").val());
        });
        $("#txtCity").change(function () {
            $("#HfCity").val($("#txtCity").val());
            geoFindMe();
        });
    </script>
    <script type="text/javascript">
        function geoFindMe() {

            function success(position) {
                const latitude = position.coords.latitude;
                const longitude = position.coords.longitude;
                var Status;
                var latlon = position.coords.latitude + "," + position.coords.longitude;
                $("#HfLatitude").val(latitude);
                $("#HfLongitude").val(longitude);
                $("#lblGeoCordinates").text(latlon);
                console.log(latlon);


            }

            function error() {
                Status = 'Unable to retrieve your location';
                $("#lblGeoCordinates").val(Status);
            }

            if (!navigator.geolocation) {
                Status = 'Geolocation is not supported by your browser';
                $("#lblGeoCordinates").val(Status);
            } else {
                Status = 'Locating…';
                $("#lblGeoCordinates").val(Status);
                navigator.geolocation.getCurrentPosition(success, error);
            }

        }
    </script>
</body>

</html>
